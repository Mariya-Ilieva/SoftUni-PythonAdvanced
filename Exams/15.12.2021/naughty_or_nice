def naughty_or_nice_list(n, *args, **kwargs):
    res = ''
    nice = []
    naughty = []
    not_found = []

    for el in args:
        element = el.split('-')
        arg_number = int(element[0])
        nice_or_naughty = element[1]

        count = 0
        name = ''
        number = 0
        for current_tuple in n:
            tuple_number = current_tuple[0]
            if tuple_number == arg_number:
                count += 1
                name = current_tuple[1]
                number = current_tuple[0]
        if count == 1:
            if nice_or_naughty == 'Nice':
                nice.append(name)
            else:
                naughty.append(name)
            tuple_to_remove = (number, name)
            n.remove(tuple_to_remove)

    for name, nice_or_naughty in kwargs.items():
        counter = 0
        number_1 = 0
        for element in n:
            if element[1] == str(name):
                counter += 1
                number_1 = element[0]
        if counter == 1:
            if nice_or_naughty == 'Nice':
                nice.append(name)
            else:
                naughty.append(name)
            tuple_2_to_remove = (number_1, name)
            n.remove(tuple_2_to_remove)
    if n:
        for rest_tuples in n:
            not_found.append(rest_tuples[1])
    if nice:
        res += 'Nice: ' + ', '.join(nice) + '\n'
    if naughty:
        res += 'Naughty: ' + ', '.join(naughty) + '\n'
    if not_found:
        res += 'Not found: ' + ', '.join(not_found)

    return res


print(naughty_or_nice_list(
    [
        (6, "John"),
        (4, "Karen"),
        (2, "Tim"),
        (1, "Merry"),
        (6, "Frank"),
    ],
    "6-Nice",
    "5-Naughty",
    "4-Nice",
    "3-Naughty",
    "2-Nice",
    "1-Naughty",
    Frank="Nice",
    Merry="Nice",
    John="Naughty",
))
